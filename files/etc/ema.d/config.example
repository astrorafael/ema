# ------------------------------------------------------------------------------------
# Copyright (c) 2014 Rafael Gonzalez.
#
# See the LICENSE file for details
# ------------------------------------------------------------------------------------


#==============================================================================#
#                            Generic configuration Data                        #
#==============================================================================#
[ema]

# Log File path
# Not reloadable property
log_file = /var/log/ema.log

# The host computer (i.e a Raspberry Pi)  has a buli-in RTC (yes/no)
# Not reloadable property
host_rtc = no

# Number of retries to detect an EMA
# Usually set to 3, set to 0 for debugging purposes
# Not reloadable property
nretries = 0

# EMA sends status mesaages every 5 seconds.
# We may not wish to publish all the messages, so we subsample.
# This is the subsample period in seconds (>= 5 seconds)
# reloadable property
period = 60

# Flag: shuts down this program when 90% active time interval been reached
# Warning: This does not shut down the computer. 
# An script at 90% activity should do it.
# reloadable property
shutdown = yes

# Overlap factor (%) to transmit some redundancy in historic data dumps
# Useful if a given dump fails
# 0% = no overlap, 100%=full historic data each time
# reloadable property
overlap = 25
 
# component log level (debug, info, warn, error, critical)
# reloadable property
log_level = debug

#------------------------------------------------------------------------------#

[serial]
# Serial Port Settings. 

# Baud rate supported only 9600 & 57600
# As an alternative a tcp:<host>:port can be specified
# Not reloadable property
endpoint = serial:/dev/ttyUSB0:9600

# component log level (debug, info, warn, error, critical)
# reloadable property
log_level = debug

# log serial protocol messages from/to EMA ?
# reloadable property
log_messages = yes

#------------------------------------------------------------------------------#
[probe]
# Internet connectivity probe
# If the host computer has not network connectivity, then this program:
# - will synchronize its clock from EMA RTC (normally, it is EMA station
#   RTC what gets synchronized to the host clock)
# - will execute an script (i.e. probably to shut the host down)

# 3 Sites to probe (no more, no less)
# reloadable properties
site1 = http://www.google.es
site2 = http://www.facebook.es
site3 = http://www.twitter.es

# Number of probes
# reloadable property
attempts = 3

# Interval (seconds) between probes
# reloadable property
interval = 30

# component log level (debug, info, warn, error, critical)
# reloadable property
log_level = debug

#------------------------------------------------------------------------------#
[scripts]
# Internet connectivity detection
# It is useful to know when the program has no internet connectivity
# If no network connectivity, then the program:
# - will synchronize its clock from EMA RTC (insteado of the other way round)
# - will execute an script (i.e. probably to shut the host down)


# List of comma separated scripts to execute on change of roof relay switch 
# Each script should show the full path. 
# Leave empty if not used
# reloadable property
roof_relay = 

# Format string for the script arguments
# reloadable property
roof_relay_args = "--status %s --reason %s"

# Script mode: (Never, Once, Many)
# When launched mutiple times, EMA server does not lauch a script
# till the previous run is over
# reloadable property
roof_relay_mode = Many


# List of comma separated scripts to execute on change of aux relay switch 
# Each script should show the full path. 
# Leave empty if not used
# reloadable property
aux_relay = 

# Format string for the script arguments
# reloadable property
aux_relay_args = "--status %s --reason %s"

# Script mode: (Never, Once, Many)
# When launched mutiple times, EMA server does not lauch a script
# till the previous run is over
# reloadable property
aux_relay_mode = Never

# List of comma separated scripts to execute on low voltage 
# Each script should show the full path. 
# Leave empty if not used
# reloadable property
low_voltage = /home/pi/nto/ema/scripts/volt-script

# Format string for the script arguments
# reloadable property
low_voltage_args = '--voltage %.1f --threshold %.1f --size %d'

# Script mode: (Never, Once, Many)
# When launched mutiple times, EMA server does not lauch a script
# till the previous run is over
# reloadable property
low_voltage_mode = Once

# List of comma separated scripts to execute when
# no internet connection has been detected 
# Each script should show the full path. 
# Leave empty if not used
# reloadable property
no_internet =

# Format string for the script arguments
# reloadable property
no_internet_args = ''

# Script mode: (Never, Once, Many)
# When launched mutiple times, EMA server does not lauch a script
# till the previous run is over
# reloadable property
no_internet_mode = Once


# List of comma separated scripts to execute when
# the current time reaches the 10%, 30%, 50%, 70%, 90% active interval
# Each script should show the full path. 
# Leave empty if not used
# reloadable properties
active10 =
active30 =
active50 =
active70 =
active90 =

# Script mode: (Never, Once, Many)
# When launched mutiple times, EMA server does not lauch a script
# till the previous run is over
# reloadable properties
active10_mode = Once
active10_args = '--now %s --active-start %s --active-end %s --inactive-start %s --inactive-end %s'
active30_mode = Once
active30_args = '--now %s --active-start %s --active-end %s --inactive-start %s --inactive-end %s'
active50_mode = Once
active50_args = '--now %s --active-start %s --active-end %s --inactive-start %s --inactive-end %s'
active70_mode = Once
active70_args = '--now %s --active-start %s --active-end %s --inactive-start %s --inactive-end %s'
active90_mode = Once
active90_args = '--now %s --active-start %s --active-end %s --inactive-start %s --inactive-end %s'

# component log level (debug, info, warn, error, critical)
# reloadable property
log_level = debug

#------------------------------------------------------------------------------#

[mqtt]
# MQTT Client config

# Unique Station Id among all EMA
# Not reloadable property
id = foo

# The channel string used as the station id in topics (i.e EMA/<channel>/#)
# and also as part of the client_id when connecting to the broker.
# Not reloadable property
channel = foo

# Username/password credentials
# leave blank if not needed
# Not reloadable properties
username = 
password = 

# Keepalive connection (in seconds)
# Not reloadable property
keepalive = 60

# Broker to connect
# Not reloadable property
broker = tcp:test.mosquitto.org:1883

# Timeout is constant in all MQTT protocol except when
# publishing a payload, in which case a linear part depending 
# on PDU size and bandwith estimation is added

# Tx Timeout, constant part (in seconds)
# reloadable property
timeout = 4

# Tx Timeout, bandwith estimation for variable part (in bytes/sec)
# Avoid timeouts when transmitting large payloads
# reloadable property
bandwidth = 10000

# component log level (debug, info, warn, error, critical)
# reloadable property
log_level = debug

#------------------------------------------------------------------------------#

[scheduler]
# The scheduler keeps a list of active window to do things like
# sending historic 24 data and programming the aux relay for
# powering on/off
# At minimun, one active interval should be defined and should be at least 
# 15 minutes long


# List of comma-separated intervals hh1:mm1-hh2:mm2
# Historic data is dumped at the interval midpoint
# Host computer powers off at interval end 
# if and only if the service is started in poweroff mode either by :
#    sudo service ema start poweroff 
#    sudo service ema restart poweroff
#
# Time given in UTC Time.
# Not reloadable property
intervals = 12:00-12:15,20:00-20:15

# component log level (debug, info, warn, error, critical)
# reloadable property
log_level = info


#==============================================================================#
#                            Sensor configuration Data                         #
#==============================================================================#

#------------------------------------------------------------------------------#

# Power Supply voltmeter
[voltmeter]

# sync parameters
sync = no

# Volt offset [V]
# Offset to ADC for proper calibration
offset = 0.0

# Low voltage threshold [V]
# This threshold is managed by the EMA hardware and closes relays
# if relays are set in automatic mode
threshold = 11.8 

# The EMA service will execute a script if the average voltage
# value reported by EMA in status messages during 'volt_time' 
# seconds falls below 'volt_thres' + 'volt_delta'

# Low voltage thrshold delta [V]
# Volts above vlot_threshold to allow a safety marging for
# emeregency actions before relays switch off
delta = 0.2

#------------------------------------------------------------------------------#

# Mechanical Anemometer
[anemometer]

# sync parameters
sync = no

# Calibration value to yield readings in Km/h or arm length [mm] in simple
calibration = 36

# Anemometer type. Allowed values: (TX20, Simple)
model = TX20

# Theshold for instataneous wind speed [Km/h]
# instantaneous wind speed > wind_thres will close the roof relay
threshold = 20

# Theshold for average wind speed [Km/h] made on 10 min. period
# avergae wind speed > wind_thres10 will close the roof relay
ave_threshold = 66

#------------------------------------------------------------------------------#

[barometer]

# sync parameters
sync = no

# Observer height above sea level [m]
height = 700

# Barometer offeset [mBar]
offset = -19


#------------------------------------------------------------------------------#

# Peltier-based cloud sensor
[cloudsensor]

# sync parameters
sync = no

# Adj. Gain
gain = 1.0

# Threshold to close roof relay [%]
threshold = 67

#------------------------------------------------------------------------------#

# Unihedron-like, wide field photometer measuring night visual magnitude.
[photometer]

# sync parameters
sync = no

# Calibration offset [visual mag.]
offset = -0.5

# Threshold to close roof relay [visual mag.]
threshold  = 10.5


#------------------------------------------------------------------------------#

# Pluviometer (Rain Gauge) sensor
[pluviometer]

# sync parameters
sync = no

# Constant to give readings in litres.
calibration = 124

#------------------------------------------------------------------------------#

# Pyranometer device, measuring solar radiation
[pyranometer]

# sync parameters
sync = no

gain   = 1.6
offset = 0


#------------------------------------------------------------------------------#

# Rain detection sensor
[rainsensor]

# sync parameters
sync = no

# Rain threshold to close roof (0..9) [%]
threshold = 1

#------------------------------------------------------------------------------#

# Themometer measuring ambient temperature and dew point 
[thermometer]

# sync parameters
sync = no

# Threshold temperature above dew point.
# If ambient temperature < (dew point + threshold)
# the roof relay will close.
threshold = 5.0

#------------------------------------------------------------------------------#

[watchdog]

# sync parameters
sync = yes

# EMA keep alive limit [seconds]
# When times out, the roof relay is switched off
# The program sends a keepalive message every period/2 seconds
period = 200

#------------------------------------------------------------------------------#

# EMA Real Time Clock
[rtc]

# Max difference between EMA and host computer 
# to synchronize time [seconds].
max_drift  = 2

#==============================================================================#
#                      Actuator configuration Data                             #
#==============================================================================#

# Auxiliar relay
[aux_relay]

# sync parameters
sync = yes

# Flag. Open/close relay mode 
# 'Auto'   = automatic based on dew point
# 'Manual' = manual, by explicit commands
# 'Timer/On'   = Timed, with On/Off hour:minute
# 'Timer/Off'  = Timed, with On/Off hour:minute
mode = Auto


#------------------------------------------------------------------------------#
# Roof relay
[roof_relay]

# sync parameters
sync = no

#------------------------------------------------------------------------------#
# Web Service: REST API where to configure EMA remotely (thresholds, etc.)
[web]

# server endpoint where it listens to for HTTP requests
# Not reloadable property
server = tcp:8080:0.0.0.0

# HTTP access log file
# Not reloadable property
access = /var/log/ema-access.log

# Basic Authentication password file path
# Not reloadable property
passwd = /etc/ema.d/passwd

# Stores password in plain text
# Not reloadable property
plain = no

# component log level (debug, info, warn, error, critical)
# reloadable property
log_level = info